const axios = require('axios');

const bot = require('../BOT');

let current_input = 1;

let user = {
  tg_id: '',
  name: '',
  surname: '',
  class: ''
};

start_kb = [
  [  
    {
      text: '–í–æ–π—Ç–∏/—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è üîë',
      callback_data: 'login'
    },
  ]
];

accept_kb = [
  [
    {
      text: '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å üëå',
      callback_data: 'accept_reg'
    },
  ],
  [  
    {
      text: '–ò–∑–º–µ–Ω–∏—Ç—å ‚úèÔ∏è',
      callback_data: 'change'
    },
  ]
]

code_kb = [
  [
    {
      text: '–í–≤–µ—Å—Ç–∏ –∫–æ–¥ üïì',
      callback_data: 'code'
    },
  ]
]

bot.onText(/\/start/, (msg) => {
  bot.sendMessage(msg.chat.id, "–ü—Ä–∏–≤–µ—Ç üëã \n –≠—Ç–æ Babirusa Bot, –æ–Ω –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ —Å –≤—Ö–æ–¥–æ–º –≤ —Å–∏—Å—Ç–µ–º—É Babirusa! ", {
    reply_markup: {
      inline_keyboard: start_kb,
    }
  });
});
  
bot.on('callback_query', query => {
  switch (query.data) {

    case 'login':
      current_input = 1;
      bot.sendMessage(query.message.chat.id, '–ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç, —Å–µ–∫—É–Ω–¥—É...');
      axios.get(`http://10.66.66.33:2107/log_tg?tg_id=${query.from.id}`)
      .then(res => {
        if (res.data.status === 'ok') {
          bot.sendMessage(query.message.chat.id, '–í—ã –≤–æ—à–ª–∏ –≤ —Å–∏—Å—Ç–µ–º—É! üëç –î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∑–∞–π—Ç–∏ –≤ Babirusa, –ø—Ä–∏—à–ª–∏—Ç–µ –∫–æ–¥ —Å —ç–∫—Ä–∞–Ω–∞.', {
            reply_markup: {
              inline_keyboard: code_kb,
            }
          });
        } else {
          bot.sendMessage(query.message.chat.id, '–ß—Ç–æ–±—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è, –Ω–∞–¥–æ —É–∫–∞–∑–∞—Ç—å –Ω–µ–º–Ω–æ–≥–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–µ–±–µ. –°–Ω–∞—á–∞–ª–∞, –≤–≤–µ–¥–∏ —Å–≤–æ—ë –∏–º—è:');
          user.tg_id = query.from.id;
          bot.onText(/^[?!,.–∞-—è–ê-–Ø—ë–Å0-9\s]+$/, msg => {
            if (current_input == 1) {
              user.name = msg.text;
              bot.sendMessage(msg.chat.id, `–¢–≤–æ—ë –∏–º—è: ${user.name}. –¢–µ–ø–µ—Ä—å, –≤–≤–µ–¥–∏ —Å–≤–æ—é —Ñ–∞–º–∏–ª–∏—é:`);
              current_input = 2;
            } else if (current_input == 2) {
              user.surname = msg.text;
              bot.sendMessage(msg.chat.id, `–¢–≤–æ—è —Ñ–∞–º–∏–ª–∏—è: ${user.surname}. –¢–µ–ø–µ—Ä—å, –≤–≤–µ–¥–∏ —Å–≤–æ–π –∫–ª–∞—Å—Å:`);
              current_input = 3;
            } else if (current_input == 3) {
              user.class = msg.text;
              bot.sendMessage(msg.chat.id, `–¢–≤–æ–π –∫–ª–∞—Å—Å: ${user.class}.`);
              bot.sendMessage(msg.chat.id, `–ï—â—ë —Ä–∞–∑ –ø—Ä–æ–≤–µ—Ä—å –¥–∞–Ω–Ω—ã–µ –æ —Å–µ–±–µ –∏ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É: \n –ò–º—è: ${user.name} \n –§–∞–º–∏–ª–∏—è: ${user.surname} \n –ö–ª–∞—Å—Å: ${user.class}`, {
                reply_markup: {
                  inline_keyboard: accept_kb,
                }
              });
              current_input = 4;
              bot.clearTextListeners();
            };
          });
        }
      })
      .catch(err => {
        console.log(err);
        bot.sendMessage(query.message.chat.id, '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–Ω–æ–≤–æ! üò¢', {
          reply_markup: {
            inline_keyboard: start_kb,
          }
        });
      });
      break;

    case 'change':
      current_input = 1;
      bot.sendMessage(query.message.chat.id, '–ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç, —Å–µ–∫—É–Ω–¥—É...');
      axios.get(`http://10.66.66.33:2107/log_tg?tg_id=${query.from.id}`)
      .then(res => {
        if (res.data.status === 'ok') {
          bot.sendMessage(query.message.chat.id, '–í—ã –≤–æ—à–ª–∏ –≤ —Å–∏—Å—Ç–µ–º—É! üëç –î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∑–∞–π—Ç–∏ –≤ Babirusa, –ø—Ä–∏—à–ª–∏—Ç–µ –∫–æ–¥ —Å —ç–∫—Ä–∞–Ω–∞.', {
            reply_markup: {
              inline_keyboard: code_kb,
            }
          });
        } else {
          bot.sendMessage(query.message.chat.id, '–ß—Ç–æ–±—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è, –Ω–∞–¥–æ —É–∫–∞–∑–∞—Ç—å –Ω–µ–º–Ω–æ–≥–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–µ–±–µ. –°–Ω–∞—á–∞–ª–∞, –≤–≤–µ–¥–∏ —Å–≤–æ—ë –∏–º—è:');
          user.tg_id = query.from.id;
          bot.onText(/^[?!,.–∞-—è–ê-–Ø—ë–Å0-9\s]+$/, msg => {
            if (current_input == 1) {
              user.name = msg.text;
              bot.sendMessage(msg.chat.id, `–¢–≤–æ—ë –∏–º—è: ${user.name}. –¢–µ–ø–µ—Ä—å, –≤–≤–µ–¥–∏ —Å–≤–æ—é —Ñ–∞–º–∏–ª–∏—é:`);
              current_input = 2;
            } else if (current_input == 2) {
              user.surname = msg.text;
              bot.sendMessage(msg.chat.id, `–¢–≤–æ—è —Ñ–∞–º–∏–ª–∏—è: ${user.surname}. –¢–µ–ø–µ—Ä—å, –≤–≤–µ–¥–∏ —Å–≤–æ–π –∫–ª–∞—Å—Å:`);
              current_input = 3;
            } else if (current_input == 3) {
              user.class = msg.text;
              bot.sendMessage(msg.chat.id, `–¢–≤–æ–π –∫–ª–∞—Å—Å: ${user.class}.`);
              bot.sendMessage(msg.chat.id, `–ï—â—ë —Ä–∞–∑ –ø—Ä–æ–≤–µ—Ä—å –¥–∞–Ω–Ω—ã–µ –æ —Å–µ–±–µ –∏ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É: \n –ò–º—è: ${user.name} \n –§–∞–º–∏–ª–∏—è: ${user.surname} \n –ö–ª–∞—Å—Å: ${user.class}`, {
                reply_markup: {
                  inline_keyboard: accept_kb,
                }
              });
              current_input = 4;
              bot.clearTextListeners();
            };
          });
        }
      })
      .catch(err => {
        console.log(err);
        bot.sendMessage(query.message.chat.id, '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–Ω–æ–≤–æ! üò¢', {
          reply_markup: {
            inline_keyboard: start_kb,
          }
        });
      });
      break;
    
    case 'accept_reg':
      if (current_input == 4) {
        bot.sendMessage(query.message.chat.id, '–°–ø–∞—Å–∏–±–æ –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é! üòä –î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∑–∞–π—Ç–∏ –≤ Babirusa, –ø—Ä–∏—à–ª–∏—Ç–µ –∫–æ–¥ —Å —ç–∫—Ä–∞–Ω–∞.', {
          reply_markup: {
            inline_keyboard: code_kb,
          }
        });
        axios.post('http://10.66.66.33:2107/reg_tg', user)
        .catch(err => {
          console.log(err);
          bot.sendMessage(query.message.chat.id, '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–Ω–æ–≤–æ! üò¢', {
            reply_markup: {
              inline_keyboard: start_kb,
            }
          });
        });
      };
      break;

    case 'code':
      bot.sendMessage(query.message.chat.id, '–û—Ç–ø—Ä–∞–≤—å —à–µ—Å—Ç–∏–∑–Ω–∞—á–Ω—ã–π –∫–æ–¥ —Å —Å–∞–π—Ç–∞ https://babirusa.skifry.ru')
      bot.onText(/[0-9]/, msg => {
        if (msg.text.length === 6) {
          bot.sendMessage(msg.chat.id, '–ö–æ–¥ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è...');
          axios.post('http://10.66.66.33:2107/code_check', {
            code: msg.text,
            tg_id: msg.from.id
          }).then(res => {
            if (res.data === 'ok') {
              bot.sendMessage(msg.chat.id, '–í—ã —É—Å–ø–µ—à–Ω–æ –≤–æ—à–ª–∏! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –∫–æ–¥–æ–º, –Ω–æ –Ω–µ –æ–±–Ω–æ–≤–ª—è–π—Ç–µ –µ—ë.', {
                reply_markup: {
                  inline_keyboard: code_kb,
                }
              });
            } else {
              bot.sendMessage(msg.chat.id, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.', {
                reply_markup: {
                  inline_keyboard: code_kb,
                }
              });
            }
          }).catch(err => {
            console.log(err);
            bot.sendMessage(msg.chat.id, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ —Å–µ—Ä–≤–µ—Ä–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.', {
              reply_markup: {
                inline_keyboard: code_kb,
              }
            });
          });
        } else {
          bot.sendMessage(msg.chat.id, '–ß—Ç–æ–±—ã –≤–æ–π—Ç–∏, –Ω–∞–¥–æ –ø—Ä–∏—Å–ª–∞—Ç—å —à–µ—Å—Ç–∏–∑–Ω–∞—á–Ω—ã–π –∫–æ–¥ —Å —ç–∫—Ä–∞–Ω–∞.');
        };
      });
      break;
  
    default:
      bot.sendMessage(query.message.chat.id, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!');
      break;
  };
});